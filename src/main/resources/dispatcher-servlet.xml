<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop      
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd      
        http://www.springframework.org/schema/beans      
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd      
        http://www.springframework.org/schema/context      
        http://www.springframework.org/schema/context/spring-context-3.0.xsd      
        http://www.springframework.org/schema/mvc      
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd      
        http://www.springframework.org/schema/tx      
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- default-autowire="byName"，约定优于配置 -->

	<!-- @Controller 请求映射注解扫描,必须加上这个，不然请求controller时会出现no mapping url错误 -->
	<mvc:annotation-driven />

	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/images/**" location="/imgages/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/html/**" location="/html/" />
	<mvc:resources mapping="/dtree/**" location="/dtree/" />
	<mvc:resources mapping="/uploadify/**" location="/uploadify/" />
	
	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
	
	<!-- spring 3.0  -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="cacheSeconds" value="0" />
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">  
				        <list>
                          <value>text/html;charset=UTF-8</value>   
                     	</list> 
				    </property> 
				</bean>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" >
				</bean>
			</list>
		</property>
	</bean>
	<!-- ①：注解扫描,对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.enjoyor.*" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" /> 
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan> 

	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射，//添加拦截器，类级别的处理器映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"> -->
	<!-- <property name="interceptors"> -->
	<!-- <list> -->
	<!-- <bean class="com.fsj.spring.util.MyHandlerInterceptor"/> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- <property name="order"><value>1</value></property> -->
	<!-- </bean> -->
	
	
	 
	 <!-- spring 3.1
	 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> 
		<property name="cacheSeconds" value="0" />
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" >
					<property name="supportedMediaTypes">
						<list>
							<bean class="org.springframework.http.MediaType">
								<constructor-arg index="0" value="text" />
								<constructor-arg index="1" value="plain" />
								<constructor-arg index="2" value="UTF-8" />
							</bean>
							<bean class="org.springframework.http.MediaType">
								<constructor-arg index="0" value="*" />
								<constructor-arg index="1" value="*" />
								<constructor-arg index="2" value="UTF-8" />
							</bean>
							<bean class="org.springframework.http.MediaType">
								<constructor-arg index="0" value="text" />
								<constructor-arg index="1" value="*" />
								<constructor-arg index="2" value="UTF-8" />
							</bean>
							<bean class="org.springframework.http.MediaType">
								<constructor-arg index="0" value="application" />
								<constructor-arg index="1" value="json" />
								<constructor-arg index="2" value="UTF-8" />
							</bean>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	 -->
	<context:annotation-config/>
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:message" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lang" />
	</bean>
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>
	<!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀 InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	

	<!-- spring2.0的配置处理方式 -->
	<!-- 处理器映射,它将收到的HTTP请求映射到bean的名字上 -->
	<!-- <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"> -->
	<!-- <property name="order"><value>1</value></property> -->
	<!-- </bean> -->
	<!-- 视图解析器 -->
	<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
	<!-- <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" 
		/> -->
	<!-- <property name="contentType"> -->
	<!-- <value>text/html;charset=UTF-8</value> -->
	<!-- </property> -->
	<!-- 页面路径 -->
	<!-- <property name="prefix" value="/WEB-INF/pages/" /> -->
	<!-- <property name="suffix" value=".jsp" /> -->
	<!-- </bean> -->
	<!-- Controller配置 -->
	<!-- <bean name="/saveStudent.do" class="com.iss.is.web.controller.demo.student.SaveStudentController"> -->
	<!-- <property name="studentService"> -->
	<!-- <ref local="studentService"/> -->
	<!-- </property> -->
	<!-- <property name="commandClass"> -->
	<!-- <value>com.iss.is.dto.StudentDTO</value> -->
	<!-- </property> -->
	<!-- -->
	<!-- </bean> -->
	
	<!-- Configure the multipart resolver -->
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
        <!-- 指定所上传文件的总大小不能超过2000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
        <property name="maxUploadSize" value="2000000"/> 
    </bean> 
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
        <property name="exceptionMappings"> 
            <props> 
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 --> 
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop> 
            </props> 
        </property> 
    </bean>
</beans> 